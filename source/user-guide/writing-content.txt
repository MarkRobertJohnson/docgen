<style>
.container {
  box-sizing: border-box;
  float:left;
  width: 480px;
}
.codeContainer {
  margin: 0 20px 0 0;
}
.codeContainer pre {
  margin: 0;
}
.codeContainer code {
}
.codeContainer p {
  margin: 0;
  padding: 0;
}
.exampleContainer {
  margin: 0;
  border: 1px solid #666;
  border-radius: 6px;
  padding: 0 18px 0 18px;
}
table {
  width: 400px!important;
}
</style>

Overview
--------

Content for a DocGen website is authored in plain text. Image files can be embedded, and other types of files can be 
attached as links.

Additionally, website metadata is configured via [JSON](http://json.org) files.

> Always save input files with **UTF-8** encoding. This makes non-standard characters (ø © é etc) work.

Metadata
--------

**parameters.json**


**contents.json**

Plain text
----------

CommonMark (Markdown)
---------------------

[CommonMark](http://commonmark.org/) (also known as [MarkDown](http://daringfireball.net/projects/markdown/)) is a 
human-friendly plain text format. The source format is easy to read and write, and CommonMark translates it into HTML.
DocGen uses the <a href="https://markdown-it.github.io">markdown-it</a> implementation of CommonMark. Here is an 
example of the source and output:

<div class="container codeContainer">

    CommonMark Example
    ------------------

    Paragraphs are text blocks separated by new lines.

    Text can be styled: *emphasised* and **strong**.

    Here is an [example link](http://www.google.com).

      # To make a code block, just indent with a tab
      # "Hello World" in Ruby:
      5.times { puts "Hello!" }
</div>
<div class="container exampleContainer">

CommonMark Example
------------------

Paragraphs are text blocks separated by new lines.

Text can be styled: *emphasised* and **strong**.

Here is an [example link](http://www.google.com).

    # To make a code block, just indent with a tab
    # "Hello World" in Ruby:
    5.times { puts "Hello!" }
</div><br class="w-clear"/>

For more examples, see [writing advanced content](advanced-content.html).

HTML
----

CommonMark syntax allows only basic page elements. For more complex pages not covered by CommonMark's syntax,
simply use inline HTML:

<div class="container codeContainer">
<pre><code>&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;Foo&lt;/td&gt;
    &lt;td&gt;Bar&lt;/td&gt;
    &lt;td&gt;Baz&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;</code></pre>
</div>
<div class="container exampleContainer">
<table>
  <tr>
    <td>Foo</td>
    <td>Bar</td>
    <td>Baz</td>
  </tr>
</table>
</div><br class="w-clear"/>

For more examples, see [writing advanced content](advanced-content.html).

> It is also possible to bypass the CommonMark parser altogether and specify a pure HTML input page, by setting 
<code class="w-inline-code">"html": true</code> in a page object in *contents.json*.

MathML
------

